package com.shentu.gamebox.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.shentu.gamebox.greendao.GameData;
import com.shentu.gamebox.greendao.boxData;
import com.shentu.gamebox.greendao.boxGameData;
import com.shentu.gamebox.greendao.boxInstall;
import com.shentu.gamebox.greendao.boxLaunch;

import com.shentu.gamebox.greendao.GameDataDao;
import com.shentu.gamebox.greendao.boxDataDao;
import com.shentu.gamebox.greendao.boxGameDataDao;
import com.shentu.gamebox.greendao.boxInstallDao;
import com.shentu.gamebox.greendao.boxLaunchDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig gameDataDaoConfig;
    private final DaoConfig boxDataDaoConfig;
    private final DaoConfig boxGameDataDaoConfig;
    private final DaoConfig boxInstallDaoConfig;
    private final DaoConfig boxLaunchDaoConfig;

    private final GameDataDao gameDataDao;
    private final boxDataDao boxDataDao;
    private final boxGameDataDao boxGameDataDao;
    private final boxInstallDao boxInstallDao;
    private final boxLaunchDao boxLaunchDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        gameDataDaoConfig = daoConfigMap.get(GameDataDao.class).clone();
        gameDataDaoConfig.initIdentityScope(type);

        boxDataDaoConfig = daoConfigMap.get(boxDataDao.class).clone();
        boxDataDaoConfig.initIdentityScope(type);

        boxGameDataDaoConfig = daoConfigMap.get(boxGameDataDao.class).clone();
        boxGameDataDaoConfig.initIdentityScope(type);

        boxInstallDaoConfig = daoConfigMap.get(boxInstallDao.class).clone();
        boxInstallDaoConfig.initIdentityScope(type);

        boxLaunchDaoConfig = daoConfigMap.get(boxLaunchDao.class).clone();
        boxLaunchDaoConfig.initIdentityScope(type);

        gameDataDao = new GameDataDao(gameDataDaoConfig, this);
        boxDataDao = new boxDataDao(boxDataDaoConfig, this);
        boxGameDataDao = new boxGameDataDao(boxGameDataDaoConfig, this);
        boxInstallDao = new boxInstallDao(boxInstallDaoConfig, this);
        boxLaunchDao = new boxLaunchDao(boxLaunchDaoConfig, this);

        registerDao(GameData.class, gameDataDao);
        registerDao(boxData.class, boxDataDao);
        registerDao(boxGameData.class, boxGameDataDao);
        registerDao(boxInstall.class, boxInstallDao);
        registerDao(boxLaunch.class, boxLaunchDao);
    }
    
    public void clear() {
        gameDataDaoConfig.clearIdentityScope();
        boxDataDaoConfig.clearIdentityScope();
        boxGameDataDaoConfig.clearIdentityScope();
        boxInstallDaoConfig.clearIdentityScope();
        boxLaunchDaoConfig.clearIdentityScope();
    }

    public GameDataDao getGameDataDao() {
        return gameDataDao;
    }

    public boxDataDao getBoxDataDao() {
        return boxDataDao;
    }

    public boxGameDataDao getBoxGameDataDao() {
        return boxGameDataDao;
    }

    public boxInstallDao getBoxInstallDao() {
        return boxInstallDao;
    }

    public boxLaunchDao getBoxLaunchDao() {
        return boxLaunchDao;
    }

}
